kind: pipeline
type: docker
name: Build and test

clone:
  depth: 1

platform:
  os: linux
  arch: arm64

trigger:
  branch:
    exclude:
      - staging.tmp
      - trying.tmp
      - staging-squash-merge.tmp

steps:
  - name: build
    image: ghcr.io/alaviss/nimskull-builder:main
    commands:
      - ./koch.py boot -d:release

  - name: test_0
    image: ghcr.io/alaviss/nimskull-tester:main
    commands:
      # Clone the workspace and enter the clone
      - mkdir -p /drone/step && cp -r $PWD /drone/step/$DRONE_STEP_NAME
      - |
        cd /drone/step/$DRONE_STEP_NAME \
        && PATH=$PWD/bin:$PATH ./koch.py tests --batch:0_2 all \
        || bin/nim r tools/ci_testresults
    depends_on:
      - build

  - name: test_1
    image: ghcr.io/alaviss/nimskull-tester:main
    commands:
      # Clone the workspace and enter the clone
      - mkdir -p /drone/step && cp -r $PWD /drone/step/$DRONE_STEP_NAME
      - |
        cd /drone/step/$DRONE_STEP_NAME \
        && PATH=$PWD/bin:$PATH ./koch.py tests --batch:1_2 all \
        || { bin/nim r tools/ci_testresults && exit 1 }
    depends_on:
      - build

  - name: orc-bootstrap
    image: ghcr.io/alaviss/nimskull-builder:main
    commands:
      # Clone the workspace and enter the clone
      - mkdir -p /drone/step && cp -r $PWD /drone/step/$DRONE_STEP_NAME
      - cd /drone/step/$DRONE_STEP_NAME && ./koch.py --nim:bin/nim boot -d:release --gc:orc
    depends_on:
      - build

  - name: tooling
    image: ghcr.io/alaviss/nimskull-builder:main
    commands:
      # Clone the workspace and enter the clone
      - mkdir -p /drone/step && cp -r $PWD /drone/step/$DRONE_STEP_NAME
      - cd /drone/step/$DRONE_STEP_NAME && ./koch.py tools -d:release
      - PATH=$PWD/bin:$PATH ./koch.py testTools
    depends_on:
      - build

  - name: docs
    image: ghcr.io/alaviss/nimskull-builder:main
    commands:
      # Clone the workspace and enter the clone
      - mkdir -p /drone/step && cp -r $PWD /drone/step/$DRONE_STEP_NAME
      - |
        cd /drone/step/$DRONE_STEP_NAME && \
        ./koch.py doc \
          --git.url:"https://github.com/${DRONE_REPO}" \
          --git.commit:"${DRONE_COMMIT_SHA}" \
          --git.devel:"${DRONE_BRANCH}"
    depends_on:
      - build
